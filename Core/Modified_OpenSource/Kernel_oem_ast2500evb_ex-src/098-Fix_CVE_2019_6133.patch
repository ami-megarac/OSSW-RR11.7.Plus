diff -Naur linux.old/kernel/fork.c linux/kernel/fork.c
--- linux.old/kernel/fork.c	2019-07-10 09:52:45.535624661 +0800
+++ linux/kernel/fork.c	2019-07-10 09:57:50.211621824 +0800
@@ -1259,9 +1259,6 @@
 
 	posix_cpu_timers_init(p);
 
-	do_posix_clock_monotonic_gettime(&p->start_time);
-	p->real_start_time = p->start_time;
-	monotonic_to_bootbased(&p->real_start_time);
 	p->io_context = NULL;
 	p->audit_context = NULL;
 	if (clone_flags & CLONE_THREAD)
@@ -1417,6 +1414,18 @@
 	INIT_LIST_HEAD(&p->thread_group);
 	p->task_works = NULL;
 
+        /*
+         * From this point on we must avoid any synchronous user-space
+         * communication until we take the tasklist-lock. In particular, we do
+         * not want user-space to be able to predict the process start-time by
+         * stalling fork(2) after we recorded the start_time but before it is
+         * visible to the system.
+         */
+
+        do_posix_clock_monotonic_gettime(&p->start_time);
+        p->real_start_time = p->start_time;
+        monotonic_to_bootbased(&p->real_start_time);
+
 	/*
 	 * Make it visible to the rest of the system, but dont wake it up yet.
 	 * Need tasklist lock for parent etc handling!
